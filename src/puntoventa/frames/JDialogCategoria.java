/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package puntoventa.frames;

import java.awt.event.WindowEvent;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import puntodeventa.sql.PuntoventaCategoria;
import puntodeventa.sql.PuntoventaCategoria_;
import puntodeventa.sql.PuntoventaEmpresa;
import puntodeventa.sql.PuntoventaProducto;

/**
 *
 * @author SERVIDOR-PC
 */
public class JDialogCategoria extends javax.swing.JDialog {

    /**
     * Creates new form CategoriaJDialog
     * @param parent
     * @param modal
     */
    public JDialogCategoria(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jTextFieldNombreCategoria = new javax.swing.JTextField();
        jComboBoxCategoriaPadre = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNENombreCategoria = new javax.swing.JTextField();
        jTextFieldNECategoriaPadre = new javax.swing.JTextField();
        jTextFieldNEEmpresa = new javax.swing.JTextField();
        jTextFieldEmpresa = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CATEGORIA");
        setResizable(false);

        jButtonAceptar.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jButtonAceptar.setText("ACEPTAR");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jButtonCancelar.setText("CANCELAR");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jTextFieldNombreCategoria.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        jComboBoxCategoriaPadre.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CATEGOR√çA");
        jLabel3.setOpaque(true);

        jTextFieldNENombreCategoria.setEditable(false);
        jTextFieldNENombreCategoria.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jTextFieldNENombreCategoria.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldNENombreCategoria.setText("NOMBRE CATEGORIA");

        jTextFieldNECategoriaPadre.setEditable(false);
        jTextFieldNECategoriaPadre.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jTextFieldNECategoriaPadre.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldNECategoriaPadre.setText("CATEGORIA PADRE");

        jTextFieldNEEmpresa.setEditable(false);
        jTextFieldNEEmpresa.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jTextFieldNEEmpresa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldNEEmpresa.setText("EMPRESA");

        jTextFieldEmpresa.setEditable(false);
        jTextFieldEmpresa.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldNEEmpresa, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNENombreCategoria, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(jTextFieldNECategoriaPadre, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxCategoriaPadre, javax.swing.GroupLayout.Alignment.TRAILING, 0, 304, Short.MAX_VALUE)
                            .addComponent(jTextFieldNombreCategoria, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldEmpresa)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNombreCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jTextFieldNENombreCategoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNECategoriaPadre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCategoriaPadre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNEEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jTextFieldEmpresa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        setCancelado(true);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        
        jDialogActionCrearEditar();
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialogCategoria dialog = new JDialogCategoria(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JComboBox<String> jComboBoxCategoriaPadre;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldEmpresa;
    private javax.swing.JTextField jTextFieldNECategoriaPadre;
    private javax.swing.JTextField jTextFieldNEEmpresa;
    private javax.swing.JTextField jTextFieldNENombreCategoria;
    private javax.swing.JTextField jTextFieldNombreCategoria;
    // End of variables declaration//GEN-END:variables

    private boolean cancelado;
    private boolean modoEdicion;
    private EntityManager em;
    private PuntoventaEmpresa empresa;
    private PuntoventaCategoria categoria;
    
    private void jDialogActionCrearEditar(){
        
        String nombreCategoria = jTextFieldNombreCategoria.getText();
        PuntoventaCategoria categoriaPadre = (PuntoventaCategoria) jComboBoxCategoriaPadre.getSelectedItem();
        PuntoventaEmpresa selectedEmpresa = getEmpresa();
        PuntoventaCategoria selectedCategoria = getCategoria();
        
        if (validarDatos(nombreCategoria, categoriaPadre, selectedEmpresa)){

            if (!isModoEdicion()) {
                boolean operacionExitosa = crearNuevaCategoria(nombreCategoria, categoriaPadre, selectedEmpresa);
                if (operacionExitosa) {

                    JOptionPane.showMessageDialog(this, "¬°Operaci√≥n realizada exitosamente!.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                    this.setCancelado(false);
                } else {

                    JOptionPane.showMessageDialog(this, "Sucedi√≥ un error, Intente nuevamente", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {

                boolean operacionExitosa = modificarCategoria(nombreCategoria, categoriaPadre, selectedEmpresa, selectedCategoria );
                if (operacionExitosa) {

                    JOptionPane.showMessageDialog(this, "¬°Modificaci√≥n exitosa!.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                    this.setCancelado(false);
                } else {

                    JOptionPane.showMessageDialog(this, "Sucedi√≥ un error, Intente nuevamente", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else {

            JOptionPane.showMessageDialog(this, "Por favor ingrese los campos obligatorios y valide su informaci√≥n.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void inicializar() {

        jComboBoxCategoriaPadre.removeAllItems();
        mostrarCategoriasEnCombo(selectCategoriasEmpresa(getEmpresa()), jComboBoxCategoriaPadre);
        jTextFieldEmpresa.setText(getEmpresa().getNombreEmpresa());
    }
    
    private boolean validarDatos(String nombreCategoria, PuntoventaCategoria categoriaPadre, PuntoventaEmpresa empresa) {
        
        return !nombreCategoria.equals("");
    }
    
    private boolean crearNuevaCategoria(String nombreCategoria, PuntoventaCategoria categoriaPadre, PuntoventaEmpresa empresa) {
        
        try {
            em.getTransaction().begin();

            PuntoventaCategoria nuevaCategoria = new PuntoventaCategoria();
            
            nuevaCategoria.setNombreCategoria(nombreCategoria);
            nuevaCategoria.setIdCategoriaPadre(categoriaPadre);
            nuevaCategoria.setIdEmpresa(empresa);

            em.persist(nuevaCategoria);
            em.getTransaction().commit();

            return true;
        } catch (Exception exception) {

            System.out.println(exception.getMessage());

            try {

                em.getTransaction().rollback();
            } catch (Exception exception1) {

                System.out.println("No es posible hacer rollback en este punto");
            }
            return false;
        }
    }
    
    private boolean modificarCategoria(String nombreCategoria, PuntoventaCategoria categoriaPadre, PuntoventaEmpresa empresa, PuntoventaCategoria categoriaEditada ) {
        
        try {
            em.getTransaction().begin();

            categoriaEditada.setNombreCategoria(nombreCategoria);
            categoriaEditada.setIdCategoriaPadre(categoriaPadre);
            categoriaEditada.setIdEmpresa(empresa);

            em.persist(categoriaEditada);
            em.getTransaction().commit();
            return true;
            
        } catch (Exception exception) {

            System.out.println(exception.getMessage());
            try {

                em.getTransaction().rollback();
            } catch (Exception exception1) {

                System.out.println("No es posible hacer rollback en este punto");
            }
            return false;
        }
    }
    
    private List<PuntoventaCategoria> selectCategoriasEmpresa( PuntoventaEmpresa empresa ){
        
        CriteriaBuilder cb = em.getCriteriaBuilder();

        CriteriaQuery<PuntoventaCategoria> cq = cb.createQuery(PuntoventaCategoria.class);
        Root<PuntoventaCategoria> categoriasEmpresa = cq.from(PuntoventaCategoria.class);

        cq.where(cb.equal(categoriasEmpresa.get(PuntoventaCategoria_.idEmpresa), empresa));
        cq.select(categoriasEmpresa);

        TypedQuery<PuntoventaCategoria> q = em.createQuery(cq);
    
        List<PuntoventaCategoria> listaItems = q.getResultList();
        return listaItems;
    }
    
    private void mostrarCategoriasEnCombo( List<PuntoventaCategoria> categorias, JComboBox combo ){
        

        for (PuntoventaCategoria categoriaFor : categorias) {

            combo.addItem(categoriaFor);
        }
        
        combo.addItem(null);
    }
    
    void setCategoria(PuntoventaCategoria categoriaSeleccionada) {

        this.categoria = categoriaSeleccionada;
        
        jTextFieldNombreCategoria.setText(categoriaSeleccionada.getNombreCategoria());
        jComboBoxCategoriaPadre.setSelectedItem(categoriaSeleccionada.getIdCategoriaPadre());
        jTextFieldEmpresa.setText(categoriaSeleccionada.getIdEmpresa().getNombreEmpresa());
    }

    public PuntoventaCategoria getCategoria() {
        return categoria;
    }

    /**
     * @param em the em to set
     */
    public void setEm(EntityManager em) {
        this.em = em;
    }

    /**
     * @return the empresa
     */
    public PuntoventaEmpresa getEmpresa() {
        return empresa;
    }

    /**
     * @param empresa the empresa to set
     */
    public void setEmpresa(PuntoventaEmpresa empresa) {
        this.empresa = empresa;
    }

    /**
     * @return the cancelado
     */
    public boolean isCancelado() {
        return cancelado;
    }

    /**
     * @param cancelado the cancelado to set
     */
    public void setCancelado(boolean cancelado) {
        this.cancelado = cancelado;
    }

    /**
     * @return the modoEdicion
     */
    public boolean isModoEdicion() {
        return modoEdicion;
    }

    /**
     * @param modoEdicion the modoEdicion to set
     */
    public void setModoEdicion(boolean modoEdicion) {
        this.modoEdicion = modoEdicion;
    }
}
