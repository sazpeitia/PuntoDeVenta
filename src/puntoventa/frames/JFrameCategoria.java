package puntoventa.frames;

import java.awt.event.WindowEvent;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.swing.DefaultCellEditor;

import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import puntodeventa.sql.PuntoventaCategoria;

/**
 *
 * @author vladimirah
 */
public class JFrameCategoria extends javax.swing.JFrame {

    /**
     * Creates new form JFrameCategoria
     */
    private final EntityManagerFactory emf;
    private final EntityManager em;
    private List<PuntoventaCategoria> listaCategorias;
    

    public JFrameCategoria() {

        initComponents();

        emf = Persistence.createEntityManagerFactory("PuntoDeVentaPU");
        em = emf.createEntityManager();

        categoriafindAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        catagoriaJTable = new javax.swing.JTable();
        addRowButton = new javax.swing.JButton();
        saveCategoryButton = new javax.swing.JButton();
        eliminarjButton = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Subcategoria");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        closeButton.setText("Cerrar");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Control de categorias");

        catagoriaJTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        catagoriaJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Categoria", "Subcategoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        catagoriaJTable.setRowHeight(40);
        catagoriaJTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(catagoriaJTable);

        addRowButton.setText("Nuevo");
        addRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowButtonActionPerformed(evt);
            }
        });

        saveCategoryButton.setText("Editar");
        saveCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCategoryButtonActionPerformed(evt);
            }
        });

        eliminarjButton.setText("Eliminar");
        eliminarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addRowButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveCategoryButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eliminarjButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveCategoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eliminarjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void categoriafindAll() {

        TypedQuery<PuntoventaCategoria> typedQuery;
        typedQuery = em.createNamedQuery(
                "PuntoventaCategoria.findAll", PuntoventaCategoria.class);
        listaCategorias = typedQuery.getResultList();
    }

    private void addJComboBoxColumn() {

        categoriafindAll();

        TableColumn subCategoryColumn = catagoriaJTable.getColumnModel().getColumn(2);

        JComboBox subCategoryCombo = new JComboBox();

        List<PuntoventaCategoria> listaCategoriasTmp = listaCategorias;

        for (PuntoventaCategoria categoria : listaCategoriasTmp) {
            subCategoryCombo.addItem(categoria.getNombreCategoria());
        }

        subCategoryCombo.addItem("");

        subCategoryColumn.setCellEditor(new DefaultCellEditor(subCategoryCombo));
    }

    private void frameCategoriaMostrarCategorias() {

        categoriafindAll();
        deleteRows();

        for (PuntoventaCategoria categoria : listaCategorias) {

            addRow(categoria);
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        addJComboBoxColumn();
        frameCategoriaMostrarCategorias();
    }//GEN-LAST:event_formWindowOpened

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed

        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_closeButtonActionPerformed

    private void deleteRows() {

        DefaultTableModel dm = (DefaultTableModel) catagoriaJTable.getModel();
        int rowCount = dm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }

    public void stopJTableEditing() {

        TableCellEditor editor = catagoriaJTable.getCellEditor();
        if (editor != null) {
            editor.stopCellEditing();
        }
    }

    private void saveCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCategoryButtonActionPerformed

        try {
            int idSelectedRow = catagoriaJTable.getSelectedRow();
            PuntoventaCategoria categoriaSeleccionada = listaCategorias.get(idSelectedRow);

            em.getTransaction().begin();
            

            JDialogCategoria editarCategoria = new JDialogCategoria(this, true);
            editarCategoria.setEditing( true );
            editarCategoria.setCategoria(categoriaSeleccionada);
            editarCategoria.setListaCategorias(listaCategorias);
            editarCategoria.setEm(em);
            editarCategoria.setLocationRelativeTo(this);
            editarCategoria.setVisible(true);
            editarCategoria.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);

            //em.persist( categoriaSeleccionada );
            em.getTransaction().commit();

            frameCategoriaMostrarCategorias();
        } catch (ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException) {

            JOptionPane.showMessageDialog(this, "Debe seleccionar alguna categoría de la lista para editar");
        }
    }//GEN-LAST:event_saveCategoryButtonActionPerformed

    private void addRow() {

        DefaultTableModel modelo = (DefaultTableModel) catagoriaJTable.getModel();
        modelo.addRow(new Object[]{0, "", ""});
    }

    private void addRow(PuntoventaCategoria categoria) {

        DefaultTableModel modelo = (DefaultTableModel) catagoriaJTable.getModel();
        modelo.addRow(new Object[]{
            categoria.getIdCategoria(),
            categoria.getNombreCategoria(),
            categoria.getIdCategoriaPadre() != null ? categoria.getIdCategoriaPadre().getNombreCategoria() : null});
    }

    private void addRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowButtonActionPerformed

        em.getTransaction().begin();

        PuntoventaCategoria categoriaNueva = new PuntoventaCategoria();
        JDialogCategoria editarCategoria = new JDialogCategoria(this, true);
        editarCategoria.setListaCategorias(listaCategorias);
        editarCategoria.setCategoria(categoriaNueva);
        editarCategoria.setEm(em);
        editarCategoria.setLocationRelativeTo(this);
        editarCategoria.setVisible(true);
        editarCategoria.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);

        if (!editarCategoria.isCanceled()) {
            em.persist(categoriaNueva);
            em.getTransaction().commit();
        } else {
            em.getTransaction().rollback();
        }

        frameCategoriaMostrarCategorias();
    }//GEN-LAST:event_addRowButtonActionPerformed

    private void eliminarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarjButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarjButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
        em.close();
        emf.close();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameCategoria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRowButton;
    private javax.swing.JTable catagoriaJTable;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton eliminarjButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton saveCategoryButton;
    // End of variables declaration//GEN-END:variables
}
